root: true

env:
  browser: true
  es6: true

extends:
  - eslint:recommended
  - plugin:@typescript-eslint/recommended
  - plugin:@typescript-eslint/recommended-requiring-type-checking
  - plugin:prettier/recommended

plugins:
  - import

parserOptions:
  parser: "@typescript-eslint/parser"
  project:
    - "./tsconfig.eslint.json"

ignorePatterns:
  - "coverage/**"
  - "dist/**"
  - "docs/**"
  - "node_modules/**"

rules:
  "@typescript-eslint/ban-ts-comment":
    - off

  "@typescript-eslint/explicit-function-return-type":
    - warn
    - allowTypedFunctionExpressions: true

  "@typescript-eslint/naming-convention":
    - warn
    - selector: default
      format:
        - camelCase
      leadingUnderscore: allowSingleOrDouble
      trailingUnderscore: allow

    - selector:
        - variable
      format:
        - camelCase
        - PascalCase
        - UPPER_CASE
      leadingUnderscore: allowSingleOrDouble
      trailingUnderscore: allowSingleOrDouble

    - selector:
        - parameter
      format:
        - camelCase
        - PascalCase
      leadingUnderscore: allow
      trailingUnderscore: allow

    - selector:
        - property
      format: null
      custom:
        regex: (^/.*/$|^@|^[a-z]+(?:-[a-z]+)*?$)
        match: true
      # allow locales path like `/zh/`, alias starting with `@` and css property like `line-width`
      filter: (^/.*/$|^@|^[a-z]+(?:-[a-z]+)*?$)
      leadingUnderscore: allow
      trailingUnderscore: allow

    - selector:
        - property
      format:
        - camelCase
        - PascalCase
        - UPPER_CASE
      leadingUnderscore: allow
      trailingUnderscore: allow

    - selector: import
      format:
        - PascalCase
        - camelCase

    - selector: typeLike
      format:
        - PascalCase

  "@typescript-eslint/no-explicit-any":
    - off

  "@typescript-eslint/no-non-null-assertion":
    - off

  "@typescript-eslint/no-unsafe-member-access":
    - warn

  curly:
    - error
    - multi
    - consistent

  import/consistent-type-specifier-style:
    - error
    - prefer-inline

  import/dynamic-import-chunkname:
    - error

  import/first:
    - error

  import/newline-after-import:
    - error

  import/no-commonjs:
    - error

  import/no-cycle:
    - error

  import/no-duplicates:
    - error
    - considerQueryString: true
      prefer-inline: true

  import/no-named-default:
    - error

  import/no-restricted-paths:
    - error
    - zones:
        - target: packages/*/src/client/**
          from: packages/*/src/node/**
        - target: packages/*/src/node/**
          from: packages/*/src/client/**

  import/order:
    - error
    - alphabetize:
        order: asc
        orderImportKind: asc
      groups:
        - builtin
        - external
        - internal
        - - parent
          - sibling
        - index
        - object
      newlines-between: always

  no-duplicate-imports:
    - error

  no-unmodified-loop-condition:
    - error

  padding-line-between-statements:
    - error
    - blankLine: always
      prev:
        - const
        - let
      next:
        - "*"
    - blankLine: any
      prev:
        - const
        - let
      next:
        - const
        - let
    - blankLine: always
      prev:
        - "*"
      next:
        - return

  sort-imports:
    - error
    - allowSeparatedGroups: false
      ignoreDeclarationSort: true

overrides:
  - files:
      - "*.d.ts"
    rules:
      no-underscore-dangle:
        - off

  - files:
      - "benchmarks/**/*.ts"
      - "**/__tests__/**/*.spec.{j,t}s?(x)"
      - "rollup.config.ts"

    env:
      node: true

    rules:
      "@typescript-eslint/no-explicit-any":
        - off
      "@typescript-eslint/no-unsafe-call":
        - off
      "@typescript-eslint/no-unsafe-assignment":
        - off
      "@typescript-eslint/no-unsafe-member-access":
        - off
      import/dynamic-import-chunkname:
        - off
